#!/bin/bash


function usage {
 echo ""
 echo "Usage: ${0##*/}  <img_type_1> <img_type_2> <subjid/list>"
 echo "   -o output_dir  Set output directory (default .)"
 echo ""
 echo " e.g. to register t1 to dti for test_subj use:"
 echo "  $0 t1 dti test_subj"
 echo ""
}


. functions_checkargs

if [ "$#" -lt 3 ]
then
 usage
 exit 0
fi

affine_reg_type=affine_aladin
reg_type=bspline_f3d

output_dir=.

img_type_1=$1 #e.g.: t1, dti, fmri
img_type_2=$2

shift 2


checkCoregArgs

if [ -f $1 ]
then
 subjids=`cat $1`
else
 subjids=$1
fi

rigid_opt=""

#shift 1 #shift by number of required arguments (incl subjid/list)

#flag o with argument "o:"
#while getopts "o:r" options; do
# case $options in
#    o ) echo "Using output directory: $OPTARG"
#        output_dir=$OPTARG;;
#    r ) echo "Using rigid registration"
#        reg_type=rigid_aladin
#        rigid_opt="-rigOnly";;
#    * ) usage
#        exit 0;;
# esac
#done


for subj in $subjids
do


 subj_dir=$output_dir/$subj

 atlas_nii=$subj_dir/$img_path_1
 echo atlas_nii=$atlas_nii

 subj_nii=$subj_dir/$img_path_2
 echo "subj_nii=$subj_nii"

 if [ ! -e $subj_nii ]
 then
  echo "$subj_nii does not exist, exiting!"
  exit 0
 fi

 if [ ! -e $atlas_nii ]
 then
  echo "$atlas_nii does not exist, exiting!"
  exit 0
 fi

 affine_dir=$subj_dir/coreg/${affine_reg_type}_${img_type_1}_${img_type_2}

 xfm=$affine_dir/${img_type_1}_to_${img_type_2}.xfm
 inv_xfm=$affine_dir/${img_type_2}_to_${img_type_1}.xfm


 echo xfm: $xfm
 echo inv_xfm $inv_xfm
 if [ ! -e $xfm -o ! -e $inv_xfm ]
 then
  echo "Error on $img_type_1 to $img_type_2: Need to run reg_intrasubj_aladin before reg_intrasubj_bspline_f3d!"
  continue
 fi

 out_dir=$subj_dir/reg/${reg_type}_${img_type_1}_${img_type_2} 
 mkdir -p $out_dir

 cpp=$out_dir/ctrlpt_${img_type_1}_to_${img_type_2}.nii.gz
 def=$out_dir/def_${img_type_1}_to_${img_type_2}.nii.gz
 resampled=$out_dir/${img_type_1}_to_${img_type_2}.nreg.nii.gz

 reg_f3d -ref $subj_nii -flo $atlas_nii -aff $inv_xfm -cpp $cpp -res $resampled #-gpu 
 reg_transform -ref $t1 -cpp2def $cpp $def
 reg_transform -ref $t1 -def2disp $def $def

 cpp=$out_dir/ctrlpt_${img_type_2}_to_${img_type_1}.nii.gz
 def=$out_dir/def_${img_type_2}_to_${img_type_1}.nii.gz
 resampled=$out_dir/${img_type_2}_to_${img_type_1}.nreg.nii.gz

 reg_f3d -ref $atlas_nii -flo $subj_nii -aff $xfm -cpp $cpp -res $resampled #-gpu 
 reg_transform -ref $atlas_nii -cpp2def $cpp $def
 reg_transform -ref $atlas_nii -def2disp $def $def


 #hack fix for synaptive pipeline (when reg_aladin crashes for unknown reason)
# if [ ! -e $xfm ]
# then
#  echo "PROBLEM WITH REG_ALADIN!"
#   cp -v ~/ident.xfm $xfm
# fi



done


