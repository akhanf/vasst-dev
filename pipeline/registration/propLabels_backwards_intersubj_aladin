#!/bin/bash

function usage {
 echo ""
 echo "This function propagates labels from subject back to atlas space, e.g. before running shape analysis on manual or automated segmentations"
 echo ""
 echo "Usage: ${0##*/} <img_type> <label_type> <atlas_subj> <subjid/list> <options>"
 echo "   -o output_dir  Set output directory (default .)"
 echo "   -S             Use spline interpolation (default nearest neighbour)"
 echo "   -L             Use linear interpolation (default nearest neighbour)"
 echo "   -r             Use rigid transformation (default affine)"
 echo "" 
 
}

. functions_checkargs

if [ "$#" -lt 4 ]
then
 usage
 exit 0
fi

reg_type=affine_aladin

output_dir=.

img_type=$1 #e.g.: t1, dti, fmri
label_type=$2 #e.g: wm_bundles
atlas_subj=$3

shift 3


checkRegArgs


if [ -f $1 ]
then
 subjids=`cat $1`
else
 subjids=$1
fi

shift 1 

interp_opt="-NN 0"

#flag o with argument "o:"
while getopts "o:SLr" options; do
 case $options in
    o ) echo "Using output directory: $OPTARG"
	output_dir=$OPTARG;;
    S ) echo "Using spline interpolation"
	interp_opt="";;
    L ) echo "Using linear interpolation"
	interp_opt="-LIN";;
    r ) echo "Using rigid registration"
        reg_type=rigid_aladin;;
    * ) usage
	exit 0;;
 esac
done



for subj in $subjids
do


 subj_dir=$output_dir/$subj
 subj_nii=$subj_dir/$img_path
 atlas_nii=$atlas_dir/$img_path
 echo "subj_nii=$subj_nii"
 
 subj_label_dir=$subj_dir/labels/${img_type}/${label_type}
 reg_dir=$subj_dir/reg/${reg_type}_${img_type}/${atlas_subj}_${subj}

 out_dir=$subj_dir/labels/${img_type}/${label_type}_${reg_type}_to_${atlas_subj}
 mkdir -p $out_dir

 xfm=$reg_dir/${subj}_to_${atlas_subj}.xfm

 if [ ! -e $xfm ]
 then 
  echo "Error on $atlas_subj to $subj: Need to run reg_intersubj_aladin before propLabels_intersubj_aladin!"
  continue 
 fi


 for in_label in `ls $subj_label_dir/*.nii.gz`
 do
  prefix=${in_label##*/}
  prefix=${prefix%%.nii.gz}
  out_label=$out_dir/$prefix.nii.gz
  reg_resample -flo $in_label -res $out_label -aff $xfm -ref $atlas_nii $interp_opt
 done

done




