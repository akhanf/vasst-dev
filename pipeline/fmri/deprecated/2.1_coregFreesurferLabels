#!/bin/bash

# bring FS aparc+aseg labels into the functional data space

if [ "$#" -lt 1 ]
 then
 echo "Usage: $0 <subjids>"
 exit 0
fi



# need to apply t1map xfm (found in distortCorrect)


for subj in $@
do

 #fs_dir=~/epilepsy/shared_data/$subj/Preop/Processed/Freesurfer_SynT1w/mri
 fs_dir=~/epilepsy/local_data/freesurfer_synT1w/$subj/Preop/Processed/Freesurfer_SynT1w/mri

 
 filt_func=../external_data/$subj/SingleSubj.ica/filtered_func_data.nii.gz

 res_func=../external_data/$subj/SingleSubj.ica/filtered_func_data_2mm.nii.gz
 if [ ! -e $res_func ]
 then
 echo mri_convert $filt_func -vs 2 2 2 $res_func
 mri_convert $filt_func -vs 2 2 2 $res_func
 fi


 #want to use dilated gm seg

 #need to process FS segs 
 rlimg=$fs_dir/orig/001.mgz

 lbldir=../external_data/$subj/label_preproc
 mkdir -p $lbldir




#take wm out of ribbon
#dilD twice
#

if [ ! -e $lbldir/final_ribbon.nii.gz ]
then 

 echo "generating final_ribbon" 
  mri_convert $fs_dir/ribbon.mgz $lbldir/ribbon.nii.gz -rl $rlimg -rt nearest -odt short -ns 1

 mri_extract_label $lbldir/ribbon.nii.gz 2 41 $lbldir/wm.nii.gz
 fslmaths $lbldir/wm -bin -sub 1 -abs $lbldir/nonwm

 fslmaths $lbldir/ribbon.nii.gz -mas $lbldir/nonwm.nii.gz -kernel sphere 4 -dilD -ero $lbldir/gm_ribbon_dil.nii.gz
 fslmaths $lbldir/gm_ribbon_dil.nii.gz -bin -sub 1 -abs $lbldir/gm_ribbon_dil_inv.nii.gz

 #now 
 fslmaths $lbldir/ribbon.nii.gz -mas $lbldir/gm_ribbon_dil_inv.nii.gz -add $lbldir/gm_ribbon_dil.nii.gz $lbldir/final_ribbon.nii.gz
 
fi

if [ ! -e $fs_dir/wmparc_dilateGM.mgz ]
then

echo "generating wmparc_dilateGM.mgz" 

#now, back up fs ribbon and copy new one to FS dir
mv $fs_dir/ribbon.mgz $fs_dir/ribbon_bak.mgz
mri_convert $lbldir/final_ribbon.nii.gz -rl $fs_dir/ribbon_bak.mgz -rt nearest -odt short -ns 1 $fs_dir/ribbon.mgz

#then regenerate aparc with the new ribbon
export SUBJECTS_DIR=${fs_dir}/../../

pushd $SUBJECTS_DIR/Freesurfer_SynT1w
 #regen aparc+aseg_dilateGM.mgz
 mri_aparc2aseg --s Freesurfer_SynT1w --volmask --o mri/aparc+aseg_dilateGM.mgz
 mri_aparc2aseg --s Freesurfer_SynT1w --labelwm --hypo-as-wm --rip-unknown --volmask --o mri/wmparc_dilateGM.mgz --ctxseg aparc+aseg_dilateGM.mgz
popd

mv $fs_dir/ribbon_bak.mgz $fs_dir/ribbon.mgz

fi


#now, have wmparc dilated, use that one..
   
 seg=$lbldir/wmparc_dilateGM.nii.gz
 seg_reg=../external_data/$subj/${subj}.wmparc.nii.gz

 if [ ! -e $seg ]
 then
 echo mri_convert $fs_dir/wmparc_dilateGM.mgz $seg -rl $rlimg -rt nearest -odt short -ns 1
 mri_convert $fs_dir/wmparc_dilateGM.mgz $seg -rl $rlimg -rt nearest -odt short -ns 1
 fi

 if [ ! -e $seg_reg -a -e $seg ]
 then


 echo "correcting sform"
 #for earlier FS runs, need to correct sform:
 refbrain=~/epilepsy/shared_data/$subj/Preop/Processed/SynT1weighted/SynT1w_brain.nii.gz
 sform=`fslorient -getsform $refbrain`
 fslorient -setsform $sform $seg 
 fslorient -setqform $sform $seg 

 

 flirt_t1_fmri=../external_data/$subj/distortCorr/flirt_t1-fmri.xfm
 echo "about to register to t1"
if [ -e $flirt_t1_fmri ]
then
 echo flirt -in $seg -out $seg_reg -ref $res_func -applyxfm -init $flirt_t1_fmri -v -interp nearestneighbour
 flirt -in $seg -out $seg_reg -ref $res_func -applyxfm -init $flirt_t1_fmri -v -interp nearestneighbour
else
 echo  flirt -in $seg -out $seg_reg -ref $res_func -applyxfm -usesqform -v -interp nearestneighbour
 flirt -in $seg -out $seg_reg -ref $res_func -applyxfm -usesqform -v -interp nearestneighbour
fi

 fi










done




ts_dir=../external_data/$subj/label_timeseries
lbl_dir=../external_data/$subj/label_imgs
mkdir -p $ts_dir $lbl_dir

#extract labels and timeseries for each (remove label files after getting timeseries)
for lbl in `cat NetworkLabelList.csv`
do

 name=${lbl##*,}
 lbl=${lbl%%,*}

 echo "name: $name, lbl: $lbl"
 mask=$lbl_dir/$name.nii.gz
 if [ ! -e $mask ]
 then
 echo mri_extract_label $seg_reg $lbl $mask
 mri_extract_label $seg_reg $lbl $mask
 fi


 ts=$ts_dir/ts.$name.txt
 #get meants
 if [ ! -e $ts ]
 then
 echo fslmeants -i $res_func -m $mask -o $ts
 fslmeants -i $res_func -m $mask -o $ts
 fi

 com=$ts_dir/com.$name.txt
 if [ ! -e $com ]
 then 
  echo fslstats $mask  -c 
  fslstats $mask  -c > $com
 fi

done



