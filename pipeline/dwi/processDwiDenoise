#!/bin/bash

# dependencies:
#		 mrtrix3 dwidenoise 
# precondition:  importDWI

if [ "$#" -lt 1 ]
then
 echo " writes output to dwi/<input>_denoise"
 echo ""
 echo "Command-line Usage: $0 <in_uncorrected>  <subjid>"
 exit 0
fi

output_dir=.

in_uncorrected=$1
out_name=${in_uncorrected}_denoise
shift 1



if [ -f $1 ]
then
 subjids=`cat $1`
else
 subjids=$1
fi


for subj in $subjids
do



subj_dir=$output_dir/$subj
dwi_dir=$subj_dir/dwi
uncorr_dir=$dwi_dir/$in_uncorrected


denoise_dir=$dwi_dir/$out_name
mkdir -p $denoise_dir


for dwi in `ls $uncorr_dir/dwi*.nii.gz`
do

bvec=${dwi%%.nii.gz}.bvec
bval=${dwi%%.nii.gz}.bval
json=${dwi%%.nii.gz}.json

suffix=${dwi##*/}

 denoise_dwi=$denoise_dir/$suffix
 denoise_bvec=${denoise_dwi%%.nii.gz}.bvec
 denoise_bval=${denoise_dwi%%.nii.gz}.bval
 denoise_json=${denoise_dwi%%.nii.gz}.json

 mkdir -p $denoise_dir

 
 minvols=10

 nvols=`fslval $dwi dim4`
 if [ "$nvols" -lt "$minvols" ]
 then
  echo "skipping denoise on $denoise_dwi since $nvols is less than minimum $minvols volumes"
  cp -v $dwi $denoise_dwi

  else
 
 echo  dwidenoise $dwi $denoise_dwi -force
  dwidenoise $dwi $denoise_dwi -force


 fi

  cp -v $bvec $denoise_bvec
  cp -v $bval $denoise_bval
  cp -v $json $denoise_json
 

done

done
